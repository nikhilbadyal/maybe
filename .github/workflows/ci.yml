name: CI

on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: false
      SONAR_HOST_URL:
        required: false

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.256.0
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in Ruby dependencies
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.256.0
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.256.0
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: |
          bin/rubocop -f github
          bin/rubocop -f json -o tmp/rubocop-results.json

      - name: Upload rubocop results
        uses: actions/upload-artifact@v4.6.2
        if: always()
        with:
          name: rubocop-results
          path: tmp/rubocop-results.json
          retention-days: 1

  lint_js:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.4.0
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm install
        shell: bash

      - name: Lint/Format js code
        run: npm run lint

  # Unit + Integration Tests
  test_unit_integration:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PLAID_CLIENT_ID: foo
      PLAID_SECRET: bar
      DATABASE_URL: postgres://postgres:postgres@localhost:5432
      REDIS_URL: redis://localhost:6379
      RAILS_ENV: test
      COVERAGE: true
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libvips postgresql-client libpq-dev

      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.256.0
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: DB setup
        run: |
          bin/rails db:create
          bin/rails db:schema:load
          bin/rails db:seed

      - name: Unit and integration tests
        run: bin/rails test

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-unit
          path: coverage/
          retention-days: 1

  # System Tests
  test_system:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      PLAID_CLIENT_ID: foo
      PLAID_SECRET: bar
      DATABASE_URL: postgres://postgres:postgres@localhost:5432
      REDIS_URL: redis://localhost:6379
      RAILS_ENV: test
      COVERAGE: true
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y google-chrome-stable curl libvips postgresql-client libpq-dev

      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1.256.0
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: DB setup
        run: |
          bin/rails db:create
          bin/rails db:schema:load
          bin/rails db:seed

      - name: System tests
        run: DISABLE_PARALLELIZATION=true bin/rails test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4.6.2
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: coverage-system
          path: coverage/
          retention-days: 1

  # SonarQube Analysis (Self-Hosted Server)
  sonar:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [test_unit_integration, test_system, lint]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Download unit test coverage
        uses: actions/download-artifact@v4.1.8
        continue-on-error: true
        with:
          name: coverage-unit
          path: coverage-unit

      - name: Download system test coverage
        uses: actions/download-artifact@v4.1.8
        continue-on-error: true
        with:
          name: coverage-system
          path: coverage-system

      - name: Download rubocop results
        uses: actions/download-artifact@v4.1.8
        continue-on-error: true
        with:
          name: rubocop-results
          path: tmp

      - name: Merge coverage reports
        run: |
          mkdir -p coverage
          if [ -f coverage-unit/.resultset.json ]; then
            cp coverage-unit/.resultset.json coverage/.resultset.json
          elif [ -f coverage-system/.resultset.json ]; then
            cp coverage-system/.resultset.json coverage/.resultset.json
          fi

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
