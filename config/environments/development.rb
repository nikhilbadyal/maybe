require "active_support/core_ext/integer/time"

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Make code changes take effect immediately without server restart.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable Action Controller caching. By default caching is disabled.
  # Run `bin/rails dev:cache` to toggle.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true

    config.cache_store = :memory_store
    config.public_file_server.headers = {
      "cache-control" => "public, max-age=#{2.days.to_i}"
    }
  else
    config.action_controller.perform_caching = false

    config.cache_store = :null_store
  end

  # Store uploaded files on the configured service (see config/storage.yml).
  config.active_storage.service = ENV.fetch("ACTIVE_STORAGE_SERVICE", "local").to_sym
  # Configure URL generation for Active Storage
  config.after_initialize do
    ActiveStorage::Current.url_options = {
      host: ENV.fetch("ACTIVE_STORAGE_HOST", "localhost"),
      port: ENV.fetch("ACTIVE_STORAGE_PORT", 3000)
    }
  end

  # Set Active Storage URL expiration time to 7 days
  config.active_storage.urls_expire_in = 7.days

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Deliver using Letter Opener in development
  config.action_mailer.delivery_method = :letter_opener
  config.action_mailer.perform_deliveries = true

  # Make template changes take effect immediately.
  config.action_mailer.perform_caching = false

  # Default URL options for generated links in mailers
  config.action_mailer.default_url_options = {
    host: ENV.fetch("MAILER_HOST", "localhost"),
    port: ENV.fetch("PORT", 3000)
  }

  # Report deprecations
  config.active_support.report_deprecations = true  # default
  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Append comments with runtime information tags to SQL queries in logs.
  config.active_record.query_log_tags_enabled = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  config.generators.apply_rubocop_autocorrect_after_generate!

  # Allow connection from any host in development
  config.hosts = nil
end
